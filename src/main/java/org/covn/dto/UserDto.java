package org.covn.dto;

import java.util.ArrayList;

/**
 * Registration fields for all users (patients and health professionals)
 */


import java.util.Date;
import java.util.List;

import org.covn.model.type.AdminGender;
import org.covn.model.type.BiologicalSex;

/* UserDto has common fields for all users (both patients and health professionals)
 * Superclass for HealthProfessionalDto and PatientDto
 * Previously called RegisterDto
 * 
 */

public class UserDto {
	private String userId; // return to user after successful user creation 

	// ls name fields are in Latin English-26 character script
	// in Release1, only latin script names are supported
	private String lsTitle; // optional, eg. Mr, Ms, Miss, Mrs, Dr, Prof or regional variations. CHECK CONSTRAINT
	private String lsFirstName; // required
	private String lsMiddleName; // optional
	private String lsLastName; // required
	private String lsSuffix; // optional, e.g. I, II, III, Sr, Jr, etc. Not for academic degrees. 
	private String lsDegrees; // optional. Usually Masters and above degrees. But sometimes, undergraduate degrees are entered for some health professionals 
	private String lsMaidenName; // optional
	private String lsDisplayName; // optional. if blank, use (firstName + " " + lastName)
	private String lsAliasName1; // optional. If the user has an alias, fill it here
	private String lsAliasName2; // optional. If the user has another alias, fill it here

	// OPTIONAL: ns name fields are in native character script including extended Latin characters (e.g. European languages with accent marks)
	// Native script names will be supported in Release2
	private String nsTitle; 
	private String nsFirstName; 
	private String nsMiddleName; 
	private String nsLastName; 
	private String nsSuffix;  
	private String nsDegrees;
	private String nsMaidenName; 
	private String nsDisplayName;
	private String nsAliasName1; 
	private String nsAliasName2; 
	
	private String standardName; // autogenerated: standardized full name of the user in the 
	// machine readable passport official travel document line 3 format (even if the user 
	// does not have a passport) - Uppercase English letters and spaces only. Max length 
	// is 30 characters. Surname, followed by two spaces, followed by given names. If there 
	// are multiple given (first and middle) names or multiple surnames, they are separated 
	// by single spaces. If longer than 30 characters, then trim given names to fit.
	
	// either dob or ageInYrs must be present. (UI design note: dob is preferred)
	private Date dob; // date of birth
	private int ageInYrs; // approximate age in years, when date of birth is not known
	
	private AdminGender adminGender; // gender, required. also known as 'administrative gender'. What gender does the user identify 
		// as in a socio-cultureal context. CHECK CONSTRAINT
	
	private BiologicalSex biologicalSex; // Optional, the biological sex of an individual. May be different from their gender

	// each user must have at least 1 external id
	private List<ExternalIdentifierDto> externalIdList = new ArrayList<ExternalIdentifierDto>();
	
	// each user must have at least 1 address
	private List<AddressDto> addressList = new ArrayList<AddressDto>();

	// each user much have at least 1 phone number. Patients must have at least 1 cell phone (to receive OTP)
	private List<PhoneNumberDto> phoneNumberList = new ArrayList<PhoneNumberDto>();
	
	// health professionals must have at least 1 email address
	private List<EmailAddressDto> emailAddressList = new ArrayList<EmailAddressDto>();

	// users must have at least 1 photo
	private List<UserPhotoDto> userPhotoList = new ArrayList<UserPhotoDto>();
	
	
}
